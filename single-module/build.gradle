buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath "com.avast.gradle:gradle-docker-compose-plugin:0.9.2"
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'

apply plugin: VerifyEventStoreEnvironmentPlugin
apply plugin: 'docker-compose'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    eventuateMavenRepoUrl.split(',').each { repoUrl -> maven { url repoUrl } }
}

dependencies {
    compile "io.eventuate.local.java:eventuate-client-java-spring:$eventuateLocalVersion"
    compile "io.eventuate.local.java:eventuate-local-java-spring-jdbc:$eventuateLocalVersion"

    compile 'mysql:mysql-connector-java:5.1.36'
    compile('org.postgresql:postgresql:9.4-1200-jdbc41') {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }

    compile 'org.springframework.plugin:spring-plugin-core:2.0.0.RELEASE'

    compile "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-actuator:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-hateoas:$springBootVersion"

    compile "io.reactivex:rxjava:1.1.5"
    compile "org.apache.httpcomponents:httpclient:4.5"

    compile "io.eventuate.util:eventuate-util-spring-swagger:$eventuateUtilVersion"

    testCompile "junit:junit:4.12"
    testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testCompile "io.eventuate.local.java:eventuate-client-java-spring-jdbc:$eventuateLocalVersion"
}

test {
    exclude "net/chrisrichardson/eventstore/examples/todolist/e2etests/**"
}

task e2eTest(type: Test) {
    filter {
        includeTestsMatching "net.chrisrichardson.eventstore.examples.todolist.e2etests.*"
    }
}

dockerCompose {
    environment.put "EVENTUATE_COMMON_VERSION", eventuateCommonImageVersion
    environment.put "EVENTUATE_CDC_VERSION", eventuateCdcImageVersion
    environment.put "EVENTUATE_JAVA_BASE_IMAGE_VERSION", eventuateExamplesBaseImageVersion

    mysqlbinlog {
        projectName = null
        useComposeFiles = ["docker-compose-eventuate-local-mysql.yml"]
    }

    mysqlbinlogcdc {
        projectName = null
        useComposeFiles = ["docker-compose-eventuate-local-mysql.yml"]
        startedServices = ["cdc-service"]
    }

    postgrespolling {
        projectName = null
        useComposeFiles = ["docker-compose-eventuate-local-postgres-polling.yml"]
    }

    postgrespollingcdc {
        projectName = null
        useComposeFiles = ["docker-compose-eventuate-local-postgres-polling.yml"]
        startedServices = ["cdc-service"]
    }

    postgreswal {
        projectName = null
        useComposeFiles = ["docker-compose-eventuate-local-postgres-wal.yml"]
    }

    postgreswalcdc {
        projectName = null
        useComposeFiles = ["docker-compose-eventuate-local-postgres-wal.yml"]
        startedServices = ["cdc-service"]
    }
}